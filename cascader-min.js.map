{
  "version": 3,
  "sources": ["cascader.js"],
  "sourcesContent": ["let container_width = 0\nlet rows = 0\nlet cols = 0\nlet vertical_gap = 0\nlet horizontal_gap = 0\nlet minWidth = 0\nlet element = null\nlet bricks = null\n\n// Creamos un resizeObserver donde vamos a meter los bricks   \n// Usa la Resize Observer API para detectar cambios de tama\u00F1o en cualquier elemento -> https://developer.mozilla.org/en-US/docs/Web/API/Resize_Observer_API\nlet resizeObserver = new ResizeObserver( (entries) => {\n  init()\n})\n\nexport function cascade(container_element, options){\n\n    horizontal_gap = options.horizontalGap || options.gap\n    vertical_gap = options.verticalGap || options.gap\n    minWidth = options.minWidth || 200\n    element = typeof container_element === 'string' ? document.querySelector(container_element) : container_element\n    container_width = element.offsetWidth\n    cols = Math.floor(container_width / minWidth)\n\n    if(!element.id) console.error('Cascader: Container needs an id')\n\n    bricks = document.querySelectorAll(`#${element.id} > *`)\n\n    element.style.position = 'relative'\n\n    init()\n}\n  \nfunction init(){\n  console.log(\"Build cascade\")\n  positionBricks()\n  setContainerHeight()\n}\n\nexport function removeCascade(){\n  console.log(\"Removing cascade\")\n  \n  resizeObserver.disconnect()\n  element.removeAttribute('style')\n  for(let brick of bricks) brick.removeAttribute('style')\n}\n\nfunction positionBricks(){\n  for(let i=0; i<bricks.length; i++){\n    \n    // Recalcular el container_width cuando se hace peque\u00F1o o grande y redistribuir columnas\n    container_width = element.offsetWidth\n    cols = Math.floor(container_width / minWidth)\n\n    const brick = bricks[i]\n\n    const brick_row = Math.floor(i/cols)\n    const brick_col = i%cols\n    const brick_width = 100/cols\n    const gap_reduce = horizontal_gap*(cols-1)/cols\n    if(brick_row > rows) rows = brick_row\n\n    brick.style.position = 'absolute'\n    brick.setAttribute('row', brick_row)\n    brick.setAttribute('col', brick_col)\n\n    // Posiciona horizontalmente \n    brick.style.width = `calc(${brick_width}% - ${gap_reduce}px)`\n    brick.style.left = `calc(${brick_width*brick_col}% + ${horizontal_gap/cols * brick_col}px`\n\n    // Posiciona verticalmente, sumando los bricks en la columna (solo los que estan en filas superiores) \n    const bricks_in_col = element.querySelectorAll(`[col='${brick_col}']`)\n    let brick_column_height = 0\n\n    for(let brick_in_col of bricks_in_col){\n      if(brick_in_col.getAttribute('row') > brick_row) continue\n      brick_column_height = brick_column_height + brick_in_col.offsetHeight + vertical_gap\n    }\n\n    brick_column_height = brick_column_height - brick.offsetHeight - vertical_gap\n    brick.style.top = brick_column_height + 'px'\n\n    resizeObserver.observe(brick)\n    \n  }\n}\n\n// Mira el tama\u00F1o de la columna mas larga y adapta el contenedor padre\nfunction setContainerHeight(){\n  let largest_col = 0\n  \n  for(let i=0; i<cols; i++){\n    const col = element.querySelectorAll(`[col='${i}']`)\n    \n    let total_height = 0\n    \n    for(let el of col){\n      let row = el.getAttribute('row')\n      let additional_gap = row < rows ? vertical_gap : 0\n      total_height = total_height + el.offsetHeight + additional_gap\n    }\n\n    if(total_height > largest_col) largest_col = total_height\n  }\n\n  element.style.height = largest_col+'px'\n}"],
  "mappings": "AAAA,GAAI,GAAkB,EAClB,EAAO,EACP,EAAO,EACP,EAAe,EACf,EAAiB,EACjB,EAAW,EACX,EAAU,KACV,EAAS,KAIT,EAAiB,GAAI,gBAAgB,AAAC,GAAY,CACpD,EAAK,CACP,CAAC,EAEM,WAAiB,EAAmB,EAAQ,CAE/C,EAAiB,EAAQ,eAAiB,EAAQ,IAClD,EAAe,EAAQ,aAAe,EAAQ,IAC9C,EAAW,EAAQ,UAAY,IAC/B,EAAU,MAAO,IAAsB,SAAW,SAAS,cAAc,CAAiB,EAAI,EAC9F,EAAkB,EAAQ,YAC1B,EAAO,KAAK,MAAM,EAAkB,CAAQ,EAExC,EAAQ,GAEZ,EAAS,SAAS,iBAAiB,IAAI,EAAQ,QAAQ,EAEvD,EAAQ,MAAM,SAAW,WAEzB,EAAK,CACT,CAEA,YAAe,CAEb,EAAe,EACf,EAAmB,CACrB,CAEO,YAAwB,CAG7B,EAAe,WAAW,EAC1B,EAAQ,gBAAgB,OAAO,EAC/B,OAAQ,KAAS,GAAQ,EAAM,gBAAgB,OAAO,CACxD,CAEA,YAAyB,CACvB,OAAQ,GAAE,EAAG,EAAE,EAAO,OAAQ,IAAI,CAGhC,EAAkB,EAAQ,YAC1B,EAAO,KAAK,MAAM,EAAkB,CAAQ,EAE5C,GAAM,GAAQ,EAAO,GAEf,EAAY,KAAK,MAAM,EAAE,CAAI,EAC7B,EAAY,EAAE,EACd,EAAc,IAAI,EAClB,EAAa,EAAgB,GAAK,GAAG,EAC3C,AAAG,EAAY,GAAM,GAAO,GAE5B,EAAM,MAAM,SAAW,WACvB,EAAM,aAAa,MAAO,CAAS,EACnC,EAAM,aAAa,MAAO,CAAS,EAGnC,EAAM,MAAM,MAAQ,QAAQ,QAAkB,OAC9C,EAAM,MAAM,KAAO,QAAQ,EAAY,QAAgB,EAAe,EAAO,MAG7E,GAAM,GAAgB,EAAQ,iBAAiB,SAAS,KAAa,EACjE,EAAsB,EAE1B,OAAQ,KAAgB,GACtB,AAAG,EAAa,aAAa,KAAK,EAAI,GACtC,GAAsB,EAAsB,EAAa,aAAe,GAG1E,EAAsB,EAAsB,EAAM,aAAe,EACjE,EAAM,MAAM,IAAM,EAAsB,KAExC,EAAe,QAAQ,CAAK,CAE9B,CACF,CAGA,YAA6B,CAC3B,GAAI,GAAc,EAElB,OAAQ,GAAE,EAAG,EAAE,EAAM,IAAI,CACvB,GAAM,GAAM,EAAQ,iBAAiB,SAAS,KAAK,EAE/C,EAAe,EAEnB,OAAQ,KAAM,GAAI,CAEhB,GAAI,GAAiB,AADX,EAAG,aAAa,KAAK,EACJ,EAAO,EAAe,EACjD,EAAe,EAAe,EAAG,aAAe,CAClD,CAEA,AAAG,EAAe,GAAa,GAAc,EAC/C,CAEA,EAAQ,MAAM,OAAS,EAAY,IACrC",
  "names": []
}
