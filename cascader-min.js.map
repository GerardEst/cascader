{
  "version": 3,
  "sources": ["cascader.js"],
  "sourcesContent": ["let cols = 0\nlet element = null\n\nexport default function(container_element, col_number){\n    cols = col_number\n    element = container_element\n\n    if(!element.id) console.error('Cascader: Container needs an id')\n\n    const bricks = document.querySelectorAll(`#${element.id} > *`)\n\n    element.style.position = 'relative'\n\n    // Listen for size changes in bricks\n    listenSizeChanges(bricks)\n\n    // Set the position of the bricks\n    positionBricks(bricks)\n\n    // Set container height determined by the largest col\n    setContainerHeight()\n\n}\n\n// Usa la Resize Observer API para detectar cambios de tama\u00F1o en cualquier elemento -> https://developer.mozilla.org/en-US/docs/Web/API/Resize_Observer_API\nfunction listenSizeChanges(bricks){\n  for(let brick of bricks){\n    const resizeObserver = new ResizeObserver( () => {\n      positionBricks(bricks)\n      setContainerHeight()\n    })\n    resizeObserver.observe(brick)\n  }\n}\n\nfunction positionBricks(bricks){\n  for(let i=0; i<bricks.length; i++){\n    const brick = bricks[i]\n\n    const brick_row = Math.floor(i/cols)\n    const brick_width = 100/cols\n    const brick_col = i%cols\n    let brick_top = 0\n    \n    brick.style.position = 'absolute'\n    brick.setAttribute('row', brick_row)\n    brick.setAttribute('col', brick_col)\n    \n    brick.style.width = brick_width+'%'\n    brick.style.left = brick_width*brick_col+'%'\n    \n\n    const bricks_in_col = element.querySelectorAll(`[col='${brick_col}']`)\n    \n    for(let brick_in_col of bricks_in_col){\n      if(brick_in_col.getAttribute('row') >= brick_row) continue\n\n      brick_top = brick_top + brick_in_col.offsetHeight\n      brick.style.top = brick_top+'px'\n    }  \n  }\n}\n\nfunction setContainerHeight(){\n  let largest_col = 0\n  \n  for(let i=0; i<cols; i++){\n    const col = element.querySelectorAll(`[col='${i}']`)\n    let total_height = 0\n    for(let el of col){\n      total_height = total_height + el.offsetHeight\n    }\n    if(total_height > largest_col) largest_col = total_height\n  }\n\n  element.style.height = largest_col+'px'\n}"],
  "mappings": "AAAA,GAAI,GAAO,EACP,EAAU,KAEC,WAAS,EAAmB,EAAW,CAClD,EAAO,EACP,EAAU,EAEN,EAAQ,IAAI,QAAQ,MAAM,iCAAiC,EAE/D,GAAM,GAAS,SAAS,iBAAiB,IAAI,EAAQ,QAAQ,EAE7D,EAAQ,MAAM,SAAW,WAGzB,EAAkB,CAAM,EAGxB,EAAe,CAAM,EAGrB,EAAmB,CAEvB,CAGA,WAA2B,EAAO,CAChC,OAAQ,KAAS,GAKf,AAJuB,GAAI,gBAAgB,IAAM,CAC/C,EAAe,CAAM,EACrB,EAAmB,CACrB,CAAC,EACc,QAAQ,CAAK,CAEhC,CAEA,WAAwB,EAAO,CAC7B,OAAQ,GAAE,EAAG,EAAE,EAAO,OAAQ,IAAI,CAChC,GAAM,GAAQ,EAAO,GAEf,EAAY,KAAK,MAAM,EAAE,CAAI,EAC7B,EAAc,IAAI,EAClB,EAAY,EAAE,EAChB,EAAY,EAEhB,EAAM,MAAM,SAAW,WACvB,EAAM,aAAa,MAAO,CAAS,EACnC,EAAM,aAAa,MAAO,CAAS,EAEnC,EAAM,MAAM,MAAQ,EAAY,IAChC,EAAM,MAAM,KAAO,EAAY,EAAU,IAGzC,GAAM,GAAgB,EAAQ,iBAAiB,SAAS,KAAa,EAErE,OAAQ,KAAgB,GACtB,AAAG,EAAa,aAAa,KAAK,GAAK,GAEvC,GAAY,EAAY,EAAa,aACrC,EAAM,MAAM,IAAM,EAAU,KAEhC,CACF,CAEA,YAA6B,CAC3B,GAAI,GAAc,EAElB,OAAQ,GAAE,EAAG,EAAE,EAAM,IAAI,CACvB,GAAM,GAAM,EAAQ,iBAAiB,SAAS,KAAK,EAC/C,EAAe,EACnB,OAAQ,KAAM,GACZ,EAAe,EAAe,EAAG,aAEnC,AAAG,EAAe,GAAa,GAAc,EAC/C,CAEA,EAAQ,MAAM,OAAS,EAAY,IACrC",
  "names": []
}
