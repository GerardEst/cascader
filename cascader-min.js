var l=0,a=0,g=0,f=0,o=null,u=null,s=null;function v(t,e){l=e.columns,f=e.horizontalGap||e.gap,g=e.verticalGap||e.gap,o=t,o.id||console.error("Cascader: Container needs an id"),s=document.querySelectorAll(`#${o.id} > *`),o.style.position="relative",console.log("Build cascade"),h(),p(),k()}function w(){console.log("Removing cascade"),y(),o.removeAttribute("style");for(let t of s)t.removeAttribute("style")}function k(){u=new ResizeObserver(()=>{console.log("Resized"),h(),p()});for(let t of s)u.observe(t)}function y(){u.disconnect()}function h(){for(let t=0;t<s.length;t++){let e=s[t],i=Math.floor(t/l),r=100/l,c=t%l,b=f*(l-1)/l,n=0;i>a&&(a=i),e.style.position="absolute",e.setAttribute("row",i),e.setAttribute("col",c),e.style.width=`calc(${r}% - ${b}px)`,e.style.left=`calc(${r*c}% + ${f/l*c}px`;let _=o.querySelectorAll(`[col='${c}']`);for(let d of _)d.getAttribute("row")>=i||(n=n+d.offsetHeight,e.style.top=`${n+g*i}px`)}}function p(){let t=0;for(let e=0;e<l;e++){let i=o.querySelectorAll(`[col='${e}']`),r=0;for(let c of i){let n=c.getAttribute("row")<a?g:0;r=r+c.offsetHeight+n}r>t&&(t=r)}o.style.height=t+"px"}export{v as default,w as remove};
//# sourceMappingURL=cascader-min.js.map
